image: Visual Studio 2017

version: 3.2.{build} #does not matter

environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  global:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
  SONAR_TOKEN:
    secure: E+z756OvrMebQ3ty1VQc2/6Tz41+KCo5Js5Ha0MTfi3kseHRvMLetNbbyOk/m2td
  GITHUB_ACCESS_TOKEN:
    secure: xjZFkXfrXoPalfeau5idya9Ag/UeiljYOyetCXb7XJpfFCjl9XTzWh0cWOcSeBpl
  MYGET_TOKEN:
    secure: bcAR65oNMkWSdRYgPquim8Avd1DAW7eyQfiKOCkhrCqzPjkeDvEl7hknlyN7QF1Y

branches:
  only:
    - master

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

configuration: Release
platform: Any CPU

notifications:
- provider: Slack
  auth_token:
    secure: Y3i58yrHTt57qU64K8VsB06JMBZr7+9I44tYOd3oyWKnR+vpDilZKpiblJgwM2jHUQ88DzmBaeYzQIS9cA00oaamvT+zc/XizDsL7QBbisE=
  channel: '#build-opensource'

cache:
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml
  - '%USERPROFILE%\.nuget\packages -> **\*.csproj, appveyor.yml'
  - '%LocalAppData%\NuGet\v3-cache -> **\*.csproj, appveyor.yml'

install:
  - ps: wget "https://raw.githubusercontent.com/rducom/ALM/master/build/ComputeVersion.ps1" -outfile "ComputeVersion.ps1"
  - ps: . .\ComputeVersion.ps1
  - ps: $version = Compute "src\Rdd.Web\Rdd.Web.csproj" $env:APPVEYOR_BUILD_NUMBER $env:APPVEYOR_REPO_TAG $env:APPVEYOR_PULL_REQUEST_NUMBER
  - ps: Update-AppveyorBuild -Version $version.Semver
  - dotnet tool install --global dotnet-sonarscanner
  - choco install opencover.portable codecov

before_build:
- dotnet restore
- cmd: >-
    IF "%APPVEYOR_PULL_REQUEST_NUMBER%"=="" (
    dotnet sonarscanner begin /k:"RestDrivenDomain" /d:"sonar.analysis.mode=publish" /d:"sonar.host.url=https://sonarcloud.io" /o:luccaintegration-github /d:"sonar.login=%SONAR_TOKEN%" /d:sonar.cs.opencover.reportsPaths="coverage-opencover.xml"
    ) ELSE (
    dotnet sonarscanner begin /k:"RestDrivenDomain" /d:"sonar.host.url=https://sonarcloud.io" /o:luccaintegration-github /d:"sonar.login=%SONAR_TOKEN%" /d:"sonar.github.oauth=%GITHUB_ACCESS_TOKEN%" /d:"sonar.pullrequest.provider=github" /d:"sonar.pullrequest.branch=%APPVEYOR_REPO_BRANCH%" /d:"sonar.pullrequest.key=%APPVEYOR_PULL_REQUEST_NUMBER%" /d:"sonar.pullrequest.github.repository=LuccaSA/RestDrivenDomain" /d:"sonar.pullrequest.github.endpoint=https://api.github.com" /d:sonar.cs.opencover.reportsPaths="coverage-opencover.xml"
    )

build_script:
- ps: dotnet build Rdd.sln -c Debug -v minimal

test_script:
- OpenCover.Console.exe -returntargetcode -oldstyle -register:user -target:"C:\Program Files\dotnet\dotnet.exe" -targetargs:"test /p:DebugType=full -c Debug Rdd.sln" -filter:"+[Rdd*]* -[*Tests*]*" -excludebyattribute:"*.ExcludeFromCodeCoverage*" -output:coverage-opencover.xml
- dotnet sonarscanner end /d:"sonar.login=%SONAR_TOKEN%"
- codecov -f coverage-opencover.xml

after_test:
- ps: dotnet pack src\Rdd.Domain\Rdd.Domain.csproj --include-symbols -p:SymbolPackageFormat=snupkg /p:$("VersionPrefix="+$version.Prefix+";VersionSuffix="+$version.Suffix) /p:Configuration=Release /p:PackageVersion=$env:APPVEYOR_BUILD_VERSION -o ..\..\artifacts
- ps: dotnet pack src\Rdd.Infra\Rdd.Infra.csproj --include-symbols -p:SymbolPackageFormat=snupkg /p:$("VersionPrefix="+$version.Prefix+";VersionSuffix="+$version.Suffix) /p:Configuration=Release /p:PackageVersion=$env:APPVEYOR_BUILD_VERSION -o ..\..\artifacts
- ps: dotnet pack src\Rdd.Application\Rdd.Application.csproj --include-symbols -p:SymbolPackageFormat=snupkg /p:$("VersionPrefix="+$version.Prefix+";VersionSuffix="+$version.Suffix) /p:Configuration=Release /p:PackageVersion=$env:APPVEYOR_BUILD_VERSION -o ..\..\artifacts
- ps: dotnet pack src\Rdd.Web\Rdd.Web.csproj --include-symbols -p:SymbolPackageFormat=snupkg /p:$("VersionPrefix="+$version.Prefix+";VersionSuffix="+$version.Suffix) /p:Configuration=Release /p:PackageVersion=$env:APPVEYOR_BUILD_VERSION -o ..\..\artifacts
- ps: dotnet pack src\RDD.Web.AutoMapper\RDD.Web.AutoMapper.csproj --include-symbols -p:SymbolPackageFormat=snupkg /p:$("VersionPrefix="+$version.Prefix+";VersionSuffix="+$version.Suffix) /p:Configuration=Release /p:PackageVersion=$env:APPVEYOR_BUILD_VERSION -o ..\..\artifacts
- echo Starting Myget publish
- ps: if($env:deploy_unstable -eq "true") { foreach ($nuget in Get-ChildItem -Path .\artifacts\* -Include *.nupkg) { nuget push $nuget $env:MYGET_TOKEN -Source https://www.myget.org/F/lucca/api/v2/package -SymbolSource https://www.myget.org/F/lucca/symbols/api/v2/package -SymbolApiKey $env:MYGET_TOKEN } }

artifacts:
- path: .\artifacts\**\*.nupkg

deploy:
- provider: NuGet
  name: nuget_release
  api_key:
    secure: Vw6Z9hk7/HfD/q5sbvrck4cQvIJkEUgtj0xpOAzk0I+LixpqN0J6j8cf6hp0/tDj
  skip_symbols: true
  artifact: /.*\.nupkg/
  on:
    branch: master
    deploy_public: true
