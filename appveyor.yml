image: Visual Studio 2017

version: 2.0.{build}

environment:
  global:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
  SONAR_TOKEN:
    secure: E+z756OvrMebQ3ty1VQc2/6Tz41+KCo5Js5Ha0MTfi3kseHRvMLetNbbyOk/m2td
  GITHUB_ACCESS_TOKEN:
    secure: xjZFkXfrXoPalfeau5idya9Ag/UeiljYOyetCXb7XJpfFCjl9XTzWh0cWOcSeBpl
  MYGET_TOKEN:
    secure: bcAR65oNMkWSdRYgPquim8Avd1DAW7eyQfiKOCkhrCqzPjkeDvEl7hknlyN7QF1Y

branches:
  only:
    - master

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

configuration: Release
platform: Any CPU

notifications:
- provider: Slack
  auth_token:
    secure: Y3i58yrHTt57qU64K8VsB06JMBZr7+9I44tYOd3oyWKnR+vpDilZKpiblJgwM2jHUQ88DzmBaeYzQIS9cA00oaamvT+zc/XizDsL7QBbisE=
  channel: '#build-opensource'

install:
  - ps: wget "https://raw.githubusercontent.com/rducom/ALM/master/build/ComputeVersion.ps1" -outfile "ComputeVersion.ps1"
  - ps: . .\ComputeVersion.ps1
  - ps: $version = Compute "Web\RDD.Web\RDD.Web.csproj" $env:APPVEYOR_BUILD_NUMBER $env:APPVEYOR_REPO_TAG $env:APPVEYOR_PULL_REQUEST_NUMBER
  - ps: Update-AppveyorBuild -Version $version.Semver
  - dotnet tool install --global dotnet-sonarscanner
  - nuget install OpenCover -Version 4.6.519 
  - nuget install Codecov -Version 1.0.5 

before_build:
- dotnet restore
- cmd: >-
    IF "%APPVEYOR_PULL_REQUEST_NUMBER%"=="" (
    dotnet sonarscanner begin /k:"RestDrivenDomain" /d:"sonar.analysis.mode=publish" /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.organization=luccaintegration-github" /d:"sonar.login=%SONAR_TOKEN%" /d:sonar.cs.opencover.reportsPaths="coverage-opencover.xml"
    ) ELSE (
    dotnet sonarscanner begin /k:"RestDrivenDomain" /d:"sonar.analysis.mode=preview" /d:"sonar.host.url=https://sonarcloud.io" /d:"sonar.organization=luccaintegration-github" /d:"sonar.login=%SONAR_TOKEN%" /d:"sonar.github.pullRequest=%APPVEYOR_PULL_REQUEST_NUMBER%" /d:"sonar.github.repository=LuccaSA/RestDrivenDomain" /d:"sonar.github.oauth=%GITHUB_ACCESS_TOKEN%"
    )

build_script:
- ps: msbuild "RDD.sln" /m /verbosity:minimal /p:$("VersionPrefix="+$version.Prefix+";VersionSuffix="+$version.Suffix) /p:DebugType=Full /p:Configuration=Debug /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

test_script:
- OpenCover.4.6.519\tools\OpenCover.Console.exe -returntargetcode -oldstyle -register:user -target:"C:\Program Files\dotnet\dotnet.exe" -targetargs:"test /p:DebugType=full -c Debug Domain\RDD.Domain.Tests\RDD.Domain.Tests.csproj" -filter:"+[RDD*]* -[*Tests*]*" -excludebyattribute:"*.ExcludeFromCodeCoverage*" -output:coverage-opencover.xml
- OpenCover.4.6.519\tools\OpenCover.Console.exe -returntargetcode -oldstyle -register:user -target:"C:\Program Files\dotnet\dotnet.exe" -targetargs:"test /p:DebugType=full -c Debug Infra\RDD.Infra.Tests\RDD.Infra.Tests.csproj" -filter:"+[RDD*]* -[*Tests*]*" -excludebyattribute:"*.ExcludeFromCodeCoverage*" -mergeoutput -output:coverage-opencover.xml
- OpenCover.4.6.519\tools\OpenCover.Console.exe -returntargetcode -oldstyle -register:user -target:"C:\Program Files\dotnet\dotnet.exe" -targetargs:"test /p:DebugType=full -c Debug Web\RDD.Web.Tests\RDD.Web.Tests.csproj" -filter:"+[RDD*]* -[*Tests*]*" -excludebyattribute:"*.ExcludeFromCodeCoverage*" -mergeoutput -output:coverage-opencover.xml
- dotnet sonarscanner end /d:"sonar.login=%SONAR_TOKEN%"
- Codecov.1.0.5\tools\codecov -f coverage-opencover.xml

after_test:
- ps: dotnet pack Domain\RDD.Domain\RDD.Domain.csproj --include-symbols --configuration Release /p:PackageVersion=$env:APPVEYOR_BUILD_VERSION /p:SourceLinkEnabled=true /p:$("VersionPrefix="+$version.Prefix+";VersionSuffix="+$version.Suffix) -o ..\..\artifacts
- ps: dotnet pack Infra\RDD.Infra\RDD.Infra.csproj --include-symbols --configuration Release /p:PackageVersion=$env:APPVEYOR_BUILD_VERSION /p:SourceLinkEnabled=true /p:$("VersionPrefix="+$version.Prefix+";VersionSuffix="+$version.Suffix) -o ..\..\artifacts
- ps: dotnet pack Application\RDD.Application\RDD.Application.csproj --include-symbols --configuration Release /p:PackageVersion=$env:APPVEYOR_BUILD_VERSION /p:SourceLinkEnabled=true /p:$("VersionPrefix="+$version.Prefix+";VersionSuffix="+$version.Suffix) -o ..\..\artifacts
- ps: dotnet pack Web\RDD.Web\RDD.Web.csproj --include-symbols --configuration Release /p:PackageVersion=$env:APPVEYOR_BUILD_VERSION /p:SourceLinkEnabled=true /p:$("VersionPrefix="+$version.Prefix+";VersionSuffix="+$version.Suffix) -o ..\..\artifacts
- echo Starting Myget publish
- ps: if($env:deploy_unstable -eq "true") { foreach ($nuget in Get-ChildItem -Path .\artifacts\* -Include *.nupkg) { nuget push $nuget $env:MYGET_TOKEN -Source https://www.myget.org/F/lucca/api/v2/package -SymbolSource https://www.myget.org/F/lucca/symbols/api/v2/package -SymbolApiKey $env:MYGET_TOKEN } }

artifacts:
- path: .\artifacts\**\*.nupkg

deploy:
- provider: NuGet
  name: nuget_release
  api_key:
    secure: TlRoD6z10XUVN/5ykpwvZ0P0Cc/tb/CnvU2n09WWuUgvHAOv+wxCwXyH3NSN1y4q
  skip_symbols: true
  artifact: /.*\.nupkg/
  on:
    branch: master
    deploy_public: true
